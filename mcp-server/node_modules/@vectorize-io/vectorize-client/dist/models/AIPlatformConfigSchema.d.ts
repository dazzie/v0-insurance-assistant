/**
 * Vectorize API
 * API for Vectorize services (Beta)
 *
 * The version of the OpenAPI document: 0.1.2
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
/**
 *
 * @export
 * @interface AIPlatformConfigSchema
 */
export interface AIPlatformConfigSchema {
    /**
     *
     * @type {string}
     * @memberof AIPlatformConfigSchema
     */
    embeddingModel?: AIPlatformConfigSchemaEmbeddingModelEnum;
    /**
     *
     * @type {string}
     * @memberof AIPlatformConfigSchema
     */
    chunkingStrategy?: AIPlatformConfigSchemaChunkingStrategyEnum;
    /**
     *
     * @type {number}
     * @memberof AIPlatformConfigSchema
     */
    chunkSize?: number;
    /**
     *
     * @type {number}
     * @memberof AIPlatformConfigSchema
     */
    chunkOverlap?: number;
    /**
     *
     * @type {number}
     * @memberof AIPlatformConfigSchema
     */
    dimensions?: number;
    /**
     *
     * @type {string}
     * @memberof AIPlatformConfigSchema
     */
    extractionStrategy?: AIPlatformConfigSchemaExtractionStrategyEnum;
}
/**
 * @export
 */
export declare const AIPlatformConfigSchemaEmbeddingModelEnum: {
    readonly VectorizeOpenAiTextEmbedding2: "VECTORIZE_OPEN_AI_TEXT_EMBEDDING_2";
    readonly VectorizeOpenAiTextEmbedding3Large: "VECTORIZE_OPEN_AI_TEXT_EMBEDDING_3_LARGE";
    readonly VectorizeOpenAiTextEmbedding3Small: "VECTORIZE_OPEN_AI_TEXT_EMBEDDING_3_SMALL";
    readonly VectorizeVoyageAi2: "VECTORIZE_VOYAGE_AI_2";
    readonly VectorizeVoyageAi3: "VECTORIZE_VOYAGE_AI_3";
    readonly VectorizeVoyageAi3Lite: "VECTORIZE_VOYAGE_AI_3_LITE";
    readonly VectorizeVoyageAi3Large: "VECTORIZE_VOYAGE_AI_3_LARGE";
    readonly VectorizeVoyageAiFinance2: "VECTORIZE_VOYAGE_AI_FINANCE_2";
    readonly VectorizeVoyageAiMultilingual2: "VECTORIZE_VOYAGE_AI_MULTILINGUAL_2";
    readonly VectorizeVoyageAiLaw2: "VECTORIZE_VOYAGE_AI_LAW_2";
    readonly VectorizeVoyageAiCode2: "VECTORIZE_VOYAGE_AI_CODE_2";
    readonly VectorizeVoyageAi35: "VECTORIZE_VOYAGE_AI_35";
    readonly VectorizeVoyageAi35Lite: "VECTORIZE_VOYAGE_AI_35_LITE";
    readonly VectorizeVoyageAiCode3: "VECTORIZE_VOYAGE_AI_CODE_3";
    readonly VectorizeTitanTextEmbedding2: "VECTORIZE_TITAN_TEXT_EMBEDDING_2";
    readonly VectorizeTitanTextEmbedding1: "VECTORIZE_TITAN_TEXT_EMBEDDING_1";
    readonly OpenAiTextEmbedding2: "OPEN_AI_TEXT_EMBEDDING_2";
    readonly OpenAiTextEmbedding3Small: "OPEN_AI_TEXT_EMBEDDING_3_SMALL";
    readonly OpenAiTextEmbedding3Large: "OPEN_AI_TEXT_EMBEDDING_3_LARGE";
    readonly VoyageAi2: "VOYAGE_AI_2";
    readonly VoyageAi3: "VOYAGE_AI_3";
    readonly VoyageAi3Lite: "VOYAGE_AI_3_LITE";
    readonly VoyageAi3Large: "VOYAGE_AI_3_LARGE";
    readonly VoyageAiFinance2: "VOYAGE_AI_FINANCE_2";
    readonly VoyageAiMultilingual2: "VOYAGE_AI_MULTILINGUAL_2";
    readonly VoyageAiLaw2: "VOYAGE_AI_LAW_2";
    readonly VoyageAiCode2: "VOYAGE_AI_CODE_2";
    readonly VoyageAi35: "VOYAGE_AI_35";
    readonly VoyageAi35Lite: "VOYAGE_AI_35_LITE";
    readonly VoyageAiCode3: "VOYAGE_AI_CODE_3";
    readonly TitanTextEmbedding1: "TITAN_TEXT_EMBEDDING_1";
    readonly TitanTextEmbedding2: "TITAN_TEXT_EMBEDDING_2";
    readonly VertexTextEmbedding4: "VERTEX_TEXT_EMBEDDING_4";
    readonly VertexTextEmbeddingGecko3: "VERTEX_TEXT_EMBEDDING_GECKO_3";
    readonly VertexGeckoMultilingual1: "VERTEX_GECKO_MULTILINGUAL_1";
    readonly VertexMultilingualEmbedding2: "VERTEX_MULTILINGUAL_EMBEDDING_2";
};
export type AIPlatformConfigSchemaEmbeddingModelEnum = typeof AIPlatformConfigSchemaEmbeddingModelEnum[keyof typeof AIPlatformConfigSchemaEmbeddingModelEnum];
/**
 * @export
 */
export declare const AIPlatformConfigSchemaChunkingStrategyEnum: {
    readonly Fixed: "FIXED";
    readonly Sentence: "SENTENCE";
    readonly Paragraph: "PARAGRAPH";
    readonly Markdown: "MARKDOWN";
};
export type AIPlatformConfigSchemaChunkingStrategyEnum = typeof AIPlatformConfigSchemaChunkingStrategyEnum[keyof typeof AIPlatformConfigSchemaChunkingStrategyEnum];
/**
 * @export
 */
export declare const AIPlatformConfigSchemaExtractionStrategyEnum: {
    readonly Fast: "FAST";
    readonly Iris: "IRIS";
    readonly Mixed: "MIXED";
};
export type AIPlatformConfigSchemaExtractionStrategyEnum = typeof AIPlatformConfigSchemaExtractionStrategyEnum[keyof typeof AIPlatformConfigSchemaExtractionStrategyEnum];
/**
 * Check if a given object implements the AIPlatformConfigSchema interface.
 */
export declare function instanceOfAIPlatformConfigSchema(value: object): value is AIPlatformConfigSchema;
export declare function AIPlatformConfigSchemaFromJSON(json: any): AIPlatformConfigSchema;
export declare function AIPlatformConfigSchemaFromJSONTyped(json: any, ignoreDiscriminator: boolean): AIPlatformConfigSchema;
export declare function AIPlatformConfigSchemaToJSON(json: any): AIPlatformConfigSchema;
export declare function AIPlatformConfigSchemaToJSONTyped(value?: AIPlatformConfigSchema | null, ignoreDiscriminator?: boolean): any;
