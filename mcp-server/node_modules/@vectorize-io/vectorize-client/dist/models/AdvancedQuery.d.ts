/**
 * Vectorize API
 * API for Vectorize services (Beta)
 *
 * The version of the OpenAPI document: 0.1.2
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
/**
 *
 * @export
 * @interface AdvancedQuery
 */
export interface AdvancedQuery {
    [key: string]: any | any;
    /**
     *
     * @type {string}
     * @memberof AdvancedQuery
     */
    mode?: AdvancedQueryModeEnum;
    /**
     *
     * @type {Array<string>}
     * @memberof AdvancedQuery
     */
    textFields?: Array<string>;
    /**
     *
     * @type {string}
     * @memberof AdvancedQuery
     */
    matchType?: AdvancedQueryMatchTypeEnum;
    /**
     *
     * @type {number}
     * @memberof AdvancedQuery
     */
    textBoost?: number;
    /**
     *
     * @type {{ [key: string]: any | null; }}
     * @memberof AdvancedQuery
     */
    filters?: {
        [key: string]: any | null;
    };
}
/**
 * @export
 */
export declare const AdvancedQueryModeEnum: {
    readonly Text: "text";
    readonly Vector: "vector";
    readonly Hybrid: "hybrid";
};
export type AdvancedQueryModeEnum = typeof AdvancedQueryModeEnum[keyof typeof AdvancedQueryModeEnum];
/**
 * @export
 */
export declare const AdvancedQueryMatchTypeEnum: {
    readonly Match: "match";
    readonly MatchPhrase: "match_phrase";
    readonly MultiMatch: "multi_match";
};
export type AdvancedQueryMatchTypeEnum = typeof AdvancedQueryMatchTypeEnum[keyof typeof AdvancedQueryMatchTypeEnum];
/**
 * Check if a given object implements the AdvancedQuery interface.
 */
export declare function instanceOfAdvancedQuery(value: object): value is AdvancedQuery;
export declare function AdvancedQueryFromJSON(json: any): AdvancedQuery;
export declare function AdvancedQueryFromJSONTyped(json: any, ignoreDiscriminator: boolean): AdvancedQuery;
export declare function AdvancedQueryToJSON(json: any): AdvancedQuery;
export declare function AdvancedQueryToJSONTyped(value?: AdvancedQuery | null, ignoreDiscriminator?: boolean): any;
