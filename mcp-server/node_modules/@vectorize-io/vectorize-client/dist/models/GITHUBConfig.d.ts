/**
 * Vectorize API
 * API for Vectorize services (Beta)
 *
 * The version of the OpenAPI document: 0.1.2
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
/**
 * Configuration for GitHub connector
 * @export
 * @interface GITHUBConfig
 */
export interface GITHUBConfig {
    /**
     * Repositories. Example: Example: owner1/repo1
     * @type {Array<string>}
     * @memberof GITHUBConfig
     */
    repositories: Array<string>;
    /**
     * Include Pull Requests
     * @type {boolean}
     * @memberof GITHUBConfig
     */
    includePullRequests: boolean;
    /**
     * Pull Request Status
     * @type {string}
     * @memberof GITHUBConfig
     */
    pullRequestStatus: GITHUBConfigPullRequestStatusEnum;
    /**
     * Pull Request Labels. Example: Optionally filter by label. E.g. fix
     * @type {Array<string>}
     * @memberof GITHUBConfig
     */
    pullRequestLabels?: Array<string>;
    /**
     * Include Issues
     * @type {boolean}
     * @memberof GITHUBConfig
     */
    includeIssues: boolean;
    /**
     * Issue Status
     * @type {string}
     * @memberof GITHUBConfig
     */
    issueStatus: GITHUBConfigIssueStatusEnum;
    /**
     * Issue Labels. Example: Optionally filter by label. E.g. bug
     * @type {Array<string>}
     * @memberof GITHUBConfig
     */
    issueLabels?: Array<string>;
    /**
     * Max Items. Leave blank for no limit, or specify a maximum number. Example: Enter maximum number of items to fetch (leave blank for no limit)
     * @type {number}
     * @memberof GITHUBConfig
     */
    maxItems?: number;
    /**
     * Created After. Filter for items created after this date. Example: Enter a date: Example 2012-12-31
     * @type {Date}
     * @memberof GITHUBConfig
     */
    createdAfter?: Date;
}
/**
 * @export
 */
export declare const GITHUBConfigPullRequestStatusEnum: {
    readonly All: "all";
    readonly Open: "open";
    readonly Closed: "closed";
    readonly Merged: "merged";
};
export type GITHUBConfigPullRequestStatusEnum = typeof GITHUBConfigPullRequestStatusEnum[keyof typeof GITHUBConfigPullRequestStatusEnum];
/**
 * @export
 */
export declare const GITHUBConfigIssueStatusEnum: {
    readonly All: "all";
    readonly Open: "open";
    readonly Closed: "closed";
};
export type GITHUBConfigIssueStatusEnum = typeof GITHUBConfigIssueStatusEnum[keyof typeof GITHUBConfigIssueStatusEnum];
/**
 * Check if a given object implements the GITHUBConfig interface.
 */
export declare function instanceOfGITHUBConfig(value: object): value is GITHUBConfig;
export declare function GITHUBConfigFromJSON(json: any): GITHUBConfig;
export declare function GITHUBConfigFromJSONTyped(json: any, ignoreDiscriminator: boolean): GITHUBConfig;
export declare function GITHUBConfigToJSON(json: any): GITHUBConfig;
export declare function GITHUBConfigToJSONTyped(value?: GITHUBConfig | null, ignoreDiscriminator?: boolean): any;
