"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * Vectorize API
 * API for Vectorize services (Beta)
 *
 * The version of the OpenAPI document: 0.1.2
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.instanceOfStartExtractionRequest = instanceOfStartExtractionRequest;
exports.StartExtractionRequestFromJSON = StartExtractionRequestFromJSON;
exports.StartExtractionRequestFromJSONTyped = StartExtractionRequestFromJSONTyped;
exports.StartExtractionRequestToJSON = StartExtractionRequestToJSON;
exports.StartExtractionRequestToJSONTyped = StartExtractionRequestToJSONTyped;
var MetadataExtractionStrategy_1 = require("./MetadataExtractionStrategy");
var ExtractionType_1 = require("./ExtractionType");
var ExtractionChunkingStrategy_1 = require("./ExtractionChunkingStrategy");
/**
 * Check if a given object implements the StartExtractionRequest interface.
 */
function instanceOfStartExtractionRequest(value) {
    if (!('fileId' in value) || value['fileId'] === undefined)
        return false;
    return true;
}
function StartExtractionRequestFromJSON(json) {
    return StartExtractionRequestFromJSONTyped(json, false);
}
function StartExtractionRequestFromJSONTyped(json, ignoreDiscriminator) {
    if (json == null) {
        return json;
    }
    return {
        'fileId': json['fileId'],
        'type': json['type'] == null ? undefined : (0, ExtractionType_1.ExtractionTypeFromJSON)(json['type']),
        'chunkingStrategy': json['chunkingStrategy'] == null ? undefined : (0, ExtractionChunkingStrategy_1.ExtractionChunkingStrategyFromJSON)(json['chunkingStrategy']),
        'chunkSize': json['chunkSize'] == null ? undefined : json['chunkSize'],
        'metadata': json['metadata'] == null ? undefined : (0, MetadataExtractionStrategy_1.MetadataExtractionStrategyFromJSON)(json['metadata']),
    };
}
function StartExtractionRequestToJSON(json) {
    return StartExtractionRequestToJSONTyped(json, false);
}
function StartExtractionRequestToJSONTyped(value, ignoreDiscriminator) {
    if (ignoreDiscriminator === void 0) { ignoreDiscriminator = false; }
    if (value == null) {
        return value;
    }
    return {
        'fileId': value['fileId'],
        'type': (0, ExtractionType_1.ExtractionTypeToJSON)(value['type']),
        'chunkingStrategy': (0, ExtractionChunkingStrategy_1.ExtractionChunkingStrategyToJSON)(value['chunkingStrategy']),
        'chunkSize': value['chunkSize'],
        'metadata': (0, MetadataExtractionStrategy_1.MetadataExtractionStrategyToJSON)(value['metadata']),
    };
}
