"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * Vectorize API
 * API for Vectorize services (Beta)
 *
 * The version of the OpenAPI document: 0.1.2
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.instanceOfGetSourceConnectors200Response = instanceOfGetSourceConnectors200Response;
exports.GetSourceConnectors200ResponseFromJSON = GetSourceConnectors200ResponseFromJSON;
exports.GetSourceConnectors200ResponseFromJSONTyped = GetSourceConnectors200ResponseFromJSONTyped;
exports.GetSourceConnectors200ResponseToJSON = GetSourceConnectors200ResponseToJSON;
exports.GetSourceConnectors200ResponseToJSONTyped = GetSourceConnectors200ResponseToJSONTyped;
var SourceConnector_1 = require("./SourceConnector");
/**
 * Check if a given object implements the GetSourceConnectors200Response interface.
 */
function instanceOfGetSourceConnectors200Response(value) {
    if (!('sourceConnectors' in value) || value['sourceConnectors'] === undefined)
        return false;
    return true;
}
function GetSourceConnectors200ResponseFromJSON(json) {
    return GetSourceConnectors200ResponseFromJSONTyped(json, false);
}
function GetSourceConnectors200ResponseFromJSONTyped(json, ignoreDiscriminator) {
    if (json == null) {
        return json;
    }
    return {
        'sourceConnectors': (json['sourceConnectors'].map(SourceConnector_1.SourceConnectorFromJSON)),
    };
}
function GetSourceConnectors200ResponseToJSON(json) {
    return GetSourceConnectors200ResponseToJSONTyped(json, false);
}
function GetSourceConnectors200ResponseToJSONTyped(value, ignoreDiscriminator) {
    if (ignoreDiscriminator === void 0) { ignoreDiscriminator = false; }
    if (value == null) {
        return value;
    }
    return {
        'sourceConnectors': (value['sourceConnectors'].map(SourceConnector_1.SourceConnectorToJSON)),
    };
}
