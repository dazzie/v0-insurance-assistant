/**
 * Vectorize API
 * API for Vectorize services (Beta)
 *
 * The version of the OpenAPI document: 0.1.2
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import * as runtime from '../runtime';
import type { CreateDestinationConnectorRequest, CreateDestinationConnectorResponse, DeleteDestinationConnectorResponse, DestinationConnector, GetDestinationConnectors200Response, UpdateDestinationConnectorRequest, UpdateDestinationConnectorResponse } from '../models/index';
export interface CreateDestinationConnectorOperationRequest {
    organizationId: string;
    createDestinationConnectorRequest: CreateDestinationConnectorRequest;
    workspaceId?: string;
}
export interface DeleteDestinationConnectorRequest {
    organizationId: string;
    destinationConnectorId: string;
}
export interface GetDestinationConnectorRequest {
    organizationId: string;
    destinationConnectorId: string;
}
export interface GetDestinationConnectorsRequest {
    organizationId: string;
    workspaceId?: string;
}
export interface UpdateDestinationConnectorOperationRequest {
    organizationId: string;
    destinationConnectorId: string;
    updateDestinationConnectorRequest: UpdateDestinationConnectorRequest;
}
/**
 *
 */
export declare class DestinationConnectorsApi extends runtime.BaseAPI {
    /**
     * Creates a new destination connector for data storage. The specific configuration fields required depend on the connector type selected.
     * Create a new destination connector
     */
    createDestinationConnectorRaw(requestParameters: CreateDestinationConnectorOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<CreateDestinationConnectorResponse>>;
    /**
     * Creates a new destination connector for data storage. The specific configuration fields required depend on the connector type selected.
     * Create a new destination connector
     */
    createDestinationConnector(requestParameters: CreateDestinationConnectorOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<CreateDestinationConnectorResponse>;
    /**
     * Delete a destination connector
     * Delete a destination connector
     */
    deleteDestinationConnectorRaw(requestParameters: DeleteDestinationConnectorRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<DeleteDestinationConnectorResponse>>;
    /**
     * Delete a destination connector
     * Delete a destination connector
     */
    deleteDestinationConnector(requestParameters: DeleteDestinationConnectorRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<DeleteDestinationConnectorResponse>;
    /**
     * Get a destination connector
     * Get a destination connector
     */
    getDestinationConnectorRaw(requestParameters: GetDestinationConnectorRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<DestinationConnector>>;
    /**
     * Get a destination connector
     * Get a destination connector
     */
    getDestinationConnector(requestParameters: GetDestinationConnectorRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<DestinationConnector>;
    /**
     * Get all existing destination connectors
     * Get all existing destination connectors
     */
    getDestinationConnectorsRaw(requestParameters: GetDestinationConnectorsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<GetDestinationConnectors200Response>>;
    /**
     * Get all existing destination connectors
     * Get all existing destination connectors
     */
    getDestinationConnectors(requestParameters: GetDestinationConnectorsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<GetDestinationConnectors200Response>;
    /**
     * Update a destination connector
     * Update a destination connector
     */
    updateDestinationConnectorRaw(requestParameters: UpdateDestinationConnectorOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<UpdateDestinationConnectorResponse>>;
    /**
     * Update a destination connector
     * Update a destination connector
     */
    updateDestinationConnector(requestParameters: UpdateDestinationConnectorOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<UpdateDestinationConnectorResponse>;
}
