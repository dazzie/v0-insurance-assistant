/**
 * Vectorize API
 * API for Vectorize services (Beta)
 *
 * The version of the OpenAPI document: 0.1.2
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import type { SourceConnectorInputConfig } from './SourceConnectorInputConfig';
/**
 * Source connector configuration
 * @export
 * @interface SourceConnectorInput
 */
export interface SourceConnectorInput {
    /**
     * Unique identifier for the source connector
     * @type {string}
     * @memberof SourceConnectorInput
     */
    id: string;
    /**
     * Type of source connector
     * @type {string}
     * @memberof SourceConnectorInput
     */
    type: SourceConnectorInputTypeEnum;
    /**
     *
     * @type {SourceConnectorInputConfig}
     * @memberof SourceConnectorInput
     */
    config: SourceConnectorInputConfig;
}
/**
 * @export
 */
export declare const SourceConnectorInputTypeEnum: {
    readonly AwsS3: "AWS_S3";
    readonly AzureBlob: "AZURE_BLOB";
    readonly Confluence: "CONFLUENCE";
    readonly Discord: "DISCORD";
    readonly Dropbox: "DROPBOX";
    readonly DropboxOauth: "DROPBOX_OAUTH";
    readonly DropboxOauthMulti: "DROPBOX_OAUTH_MULTI";
    readonly DropboxOauthMultiCustom: "DROPBOX_OAUTH_MULTI_CUSTOM";
    readonly FileUpload: "FILE_UPLOAD";
    readonly GoogleDriveOauth: "GOOGLE_DRIVE_OAUTH";
    readonly GoogleDrive: "GOOGLE_DRIVE";
    readonly GoogleDriveOauthMulti: "GOOGLE_DRIVE_OAUTH_MULTI";
    readonly GoogleDriveOauthMultiCustom: "GOOGLE_DRIVE_OAUTH_MULTI_CUSTOM";
    readonly Firecrawl: "FIRECRAWL";
    readonly Gcs: "GCS";
    readonly Zoom: "ZOOM";
    readonly ZoomAdmin: "ZOOM_ADMIN";
    readonly Intercom: "INTERCOM";
    readonly Notion: "NOTION";
    readonly NotionOauthMulti: "NOTION_OAUTH_MULTI";
    readonly NotionOauthMultiCustom: "NOTION_OAUTH_MULTI_CUSTOM";
    readonly OneDrive: "ONE_DRIVE";
    readonly Sharepoint: "SHAREPOINT";
    readonly WebCrawler: "WEB_CRAWLER";
    readonly Github: "GITHUB";
    readonly Fireflies: "FIREFLIES";
    readonly Docusign: "DOCUSIGN";
    readonly Gmail: "GMAIL";
};
export type SourceConnectorInputTypeEnum = typeof SourceConnectorInputTypeEnum[keyof typeof SourceConnectorInputTypeEnum];
/**
 * Check if a given object implements the SourceConnectorInput interface.
 */
export declare function instanceOfSourceConnectorInput(value: object): value is SourceConnectorInput;
export declare function SourceConnectorInputFromJSON(json: any): SourceConnectorInput;
export declare function SourceConnectorInputFromJSONTyped(json: any, ignoreDiscriminator: boolean): SourceConnectorInput;
export declare function SourceConnectorInputToJSON(json: any): SourceConnectorInput;
export declare function SourceConnectorInputToJSONTyped(value?: SourceConnectorInput | null, ignoreDiscriminator?: boolean): any;
