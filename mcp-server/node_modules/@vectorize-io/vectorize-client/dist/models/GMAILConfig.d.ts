/**
 * Vectorize API
 * API for Vectorize services (Beta)
 *
 * The version of the OpenAPI document: 0.1.2
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
/**
 * Configuration for Gmail connector
 * @export
 * @interface GMAILConfig
 */
export interface GMAILConfig {
    /**
     *
     * @type {string}
     * @memberof GMAILConfig
     */
    fromFilterType: string;
    /**
     *
     * @type {string}
     * @memberof GMAILConfig
     */
    toFilterType: string;
    /**
     *
     * @type {string}
     * @memberof GMAILConfig
     */
    ccFilterType: string;
    /**
     *
     * @type {string}
     * @memberof GMAILConfig
     */
    subjectFilterType: string;
    /**
     *
     * @type {string}
     * @memberof GMAILConfig
     */
    labelFilterType: string;
    /**
     * From Address Filter. Only include emails from these senders. Example: Add sender email(s)
     * @type {string}
     * @memberof GMAILConfig
     */
    from?: string;
    /**
     * To Address Filter. Only include emails sent to these recipients. Example: Add recipient email(s)
     * @type {string}
     * @memberof GMAILConfig
     */
    to?: string;
    /**
     * CC Address Filter. Only include emails with these addresses in CC field. Example: Add CC email(s)
     * @type {string}
     * @memberof GMAILConfig
     */
    cc?: string;
    /**
     * Include Attachments. Include email attachments in the processed content
     * @type {boolean}
     * @memberof GMAILConfig
     */
    includeAttachments?: boolean;
    /**
     * Subject Filter. Include emails with these keywords in the subject line. Example: Add subject keywords
     * @type {string}
     * @memberof GMAILConfig
     */
    subject?: string;
    /**
     * Start Date. Only include emails sent after this date (exclusive). Format: YYYY-MM-DD.. Example: e.g., 2024-01-01
     * @type {Date}
     * @memberof GMAILConfig
     */
    startDate?: Date;
    /**
     * End Date. Only include emails sent before this date (exclusive). Format: YYYY-MM-DD.. Example: e.g., 2024-01-31
     * @type {Date}
     * @memberof GMAILConfig
     */
    endDate?: Date;
    /**
     * Maximum Results. Leave blank for no limit, or specify a maximum number. Example: Enter maximum number of threads to retrieve (leave blank for no limit)
     * @type {number}
     * @memberof GMAILConfig
     */
    maxResults?: number;
    /**
     * Messages to Fetch. Select which categories of messages to include in the import.
     * @type {Array<string>}
     * @memberof GMAILConfig
     */
    messagesToFetch?: GMAILConfigMessagesToFetchEnum;
    /**
     * Label Filters. Include emails with these labels. Example: e.g., INBOX, IMPORTANT, CATEGORY_SOCIAL
     * @type {string}
     * @memberof GMAILConfig
     */
    labelIds?: string;
}
/**
 * @export
 */
export declare const GMAILConfigMessagesToFetchEnum: {
    readonly All: "all";
    readonly Inbox: "inbox";
    readonly Sent: "sent";
    readonly Archive: "archive";
    readonly SpamTrash: "spam-trash";
    readonly Unread: "unread";
    readonly Starred: "starred";
    readonly Important: "important";
};
export type GMAILConfigMessagesToFetchEnum = typeof GMAILConfigMessagesToFetchEnum[keyof typeof GMAILConfigMessagesToFetchEnum];
/**
 * Check if a given object implements the GMAILConfig interface.
 */
export declare function instanceOfGMAILConfig(value: object): value is GMAILConfig;
export declare function GMAILConfigFromJSON(json: any): GMAILConfig;
export declare function GMAILConfigFromJSONTyped(json: any, ignoreDiscriminator: boolean): GMAILConfig;
export declare function GMAILConfigToJSON(json: any): GMAILConfig;
export declare function GMAILConfigToJSONTyped(value?: GMAILConfig | null, ignoreDiscriminator?: boolean): any;
