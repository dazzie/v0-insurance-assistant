"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * Vectorize API
 * API for Vectorize services (Beta)
 *
 * The version of the OpenAPI document: 0.1.2
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.instanceOfRetrieveDocumentsRequest = instanceOfRetrieveDocumentsRequest;
exports.RetrieveDocumentsRequestFromJSON = RetrieveDocumentsRequestFromJSON;
exports.RetrieveDocumentsRequestFromJSONTyped = RetrieveDocumentsRequestFromJSONTyped;
exports.RetrieveDocumentsRequestToJSON = RetrieveDocumentsRequestToJSON;
exports.RetrieveDocumentsRequestToJSONTyped = RetrieveDocumentsRequestToJSONTyped;
var RetrieveContext_1 = require("./RetrieveContext");
var AdvancedQuery_1 = require("./AdvancedQuery");
/**
 * Check if a given object implements the RetrieveDocumentsRequest interface.
 */
function instanceOfRetrieveDocumentsRequest(value) {
    if (!('question' in value) || value['question'] === undefined)
        return false;
    if (!('numResults' in value) || value['numResults'] === undefined)
        return false;
    return true;
}
function RetrieveDocumentsRequestFromJSON(json) {
    return RetrieveDocumentsRequestFromJSONTyped(json, false);
}
function RetrieveDocumentsRequestFromJSONTyped(json, ignoreDiscriminator) {
    if (json == null) {
        return json;
    }
    return {
        'question': json['question'],
        'numResults': json['numResults'],
        'rerank': json['rerank'] == null ? undefined : json['rerank'],
        'metadataFilters': json['metadata-filters'] == null ? undefined : json['metadata-filters'],
        'context': json['context'] == null ? undefined : (0, RetrieveContext_1.RetrieveContextFromJSON)(json['context']),
        'advancedQuery': json['advanced-query'] == null ? undefined : (0, AdvancedQuery_1.AdvancedQueryFromJSON)(json['advanced-query']),
    };
}
function RetrieveDocumentsRequestToJSON(json) {
    return RetrieveDocumentsRequestToJSONTyped(json, false);
}
function RetrieveDocumentsRequestToJSONTyped(value, ignoreDiscriminator) {
    if (ignoreDiscriminator === void 0) { ignoreDiscriminator = false; }
    if (value == null) {
        return value;
    }
    return {
        'question': value['question'],
        'numResults': value['numResults'],
        'rerank': value['rerank'],
        'metadata-filters': value['metadataFilters'],
        'context': (0, RetrieveContext_1.RetrieveContextToJSON)(value['context']),
        'advanced-query': (0, AdvancedQuery_1.AdvancedQueryToJSON)(value['advancedQuery']),
    };
}
