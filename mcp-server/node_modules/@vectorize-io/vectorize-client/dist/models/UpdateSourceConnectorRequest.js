"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * Vectorize API
 * API for Vectorize services (Beta)
 *
 * The version of the OpenAPI document: 0.1.2
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.UpdateSourceConnectorRequestFromJSON = UpdateSourceConnectorRequestFromJSON;
exports.UpdateSourceConnectorRequestFromJSONTyped = UpdateSourceConnectorRequestFromJSONTyped;
exports.UpdateSourceConnectorRequestToJSON = UpdateSourceConnectorRequestToJSON;
exports.UpdateSourceConnectorRequestToJSONTyped = UpdateSourceConnectorRequestToJSONTyped;
var AwsS31_1 = require("./AwsS31");
var AzureBlob1_1 = require("./AzureBlob1");
var Confluence1_1 = require("./Confluence1");
var Discord1_1 = require("./Discord1");
var FileUpload1_1 = require("./FileUpload1");
var Firecrawl1_1 = require("./Firecrawl1");
var Fireflies1_1 = require("./Fireflies1");
var Gcs1_1 = require("./Gcs1");
var Github1_1 = require("./Github1");
var GoogleDrive1_1 = require("./GoogleDrive1");
var OneDrive1_1 = require("./OneDrive1");
var Sharepoint1_1 = require("./Sharepoint1");
var WebCrawler1_1 = require("./WebCrawler1");
var Zoom1_1 = require("./Zoom1");
var ZoomAdmin1_1 = require("./ZoomAdmin1");
function UpdateSourceConnectorRequestFromJSON(json) {
    return UpdateSourceConnectorRequestFromJSONTyped(json, false);
}
function UpdateSourceConnectorRequestFromJSONTyped(json, ignoreDiscriminator) {
    if (json == null) {
        return json;
    }
    if ((0, AwsS31_1.instanceOfAwsS31)(json)) {
        return (0, AwsS31_1.AwsS31FromJSONTyped)(json, true);
    }
    if ((0, AzureBlob1_1.instanceOfAzureBlob1)(json)) {
        return (0, AzureBlob1_1.AzureBlob1FromJSONTyped)(json, true);
    }
    if ((0, Confluence1_1.instanceOfConfluence1)(json)) {
        return (0, Confluence1_1.Confluence1FromJSONTyped)(json, true);
    }
    if ((0, Discord1_1.instanceOfDiscord1)(json)) {
        return (0, Discord1_1.Discord1FromJSONTyped)(json, true);
    }
    if ((0, FileUpload1_1.instanceOfFileUpload1)(json)) {
        return (0, FileUpload1_1.FileUpload1FromJSONTyped)(json, true);
    }
    if ((0, Firecrawl1_1.instanceOfFirecrawl1)(json)) {
        return (0, Firecrawl1_1.Firecrawl1FromJSONTyped)(json, true);
    }
    if ((0, Fireflies1_1.instanceOfFireflies1)(json)) {
        return (0, Fireflies1_1.Fireflies1FromJSONTyped)(json, true);
    }
    if ((0, Gcs1_1.instanceOfGcs1)(json)) {
        return (0, Gcs1_1.Gcs1FromJSONTyped)(json, true);
    }
    if ((0, Github1_1.instanceOfGithub1)(json)) {
        return (0, Github1_1.Github1FromJSONTyped)(json, true);
    }
    if ((0, GoogleDrive1_1.instanceOfGoogleDrive1)(json)) {
        return (0, GoogleDrive1_1.GoogleDrive1FromJSONTyped)(json, true);
    }
    if ((0, OneDrive1_1.instanceOfOneDrive1)(json)) {
        return (0, OneDrive1_1.OneDrive1FromJSONTyped)(json, true);
    }
    if ((0, Sharepoint1_1.instanceOfSharepoint1)(json)) {
        return (0, Sharepoint1_1.Sharepoint1FromJSONTyped)(json, true);
    }
    if ((0, WebCrawler1_1.instanceOfWebCrawler1)(json)) {
        return (0, WebCrawler1_1.WebCrawler1FromJSONTyped)(json, true);
    }
    if ((0, Zoom1_1.instanceOfZoom1)(json)) {
        return (0, Zoom1_1.Zoom1FromJSONTyped)(json, true);
    }
    if ((0, ZoomAdmin1_1.instanceOfZoomAdmin1)(json)) {
        return (0, ZoomAdmin1_1.ZoomAdmin1FromJSONTyped)(json, true);
    }
    return {};
}
function UpdateSourceConnectorRequestToJSON(json) {
    return UpdateSourceConnectorRequestToJSONTyped(json, false);
}
function UpdateSourceConnectorRequestToJSONTyped(value, ignoreDiscriminator) {
    if (ignoreDiscriminator === void 0) { ignoreDiscriminator = false; }
    if (value == null) {
        return value;
    }
    if ((0, AwsS31_1.instanceOfAwsS31)(value)) {
        return (0, AwsS31_1.AwsS31ToJSON)(value);
    }
    if ((0, AzureBlob1_1.instanceOfAzureBlob1)(value)) {
        return (0, AzureBlob1_1.AzureBlob1ToJSON)(value);
    }
    if ((0, Confluence1_1.instanceOfConfluence1)(value)) {
        return (0, Confluence1_1.Confluence1ToJSON)(value);
    }
    if ((0, Discord1_1.instanceOfDiscord1)(value)) {
        return (0, Discord1_1.Discord1ToJSON)(value);
    }
    if ((0, FileUpload1_1.instanceOfFileUpload1)(value)) {
        return (0, FileUpload1_1.FileUpload1ToJSON)(value);
    }
    if ((0, Firecrawl1_1.instanceOfFirecrawl1)(value)) {
        return (0, Firecrawl1_1.Firecrawl1ToJSON)(value);
    }
    if ((0, Fireflies1_1.instanceOfFireflies1)(value)) {
        return (0, Fireflies1_1.Fireflies1ToJSON)(value);
    }
    if ((0, Gcs1_1.instanceOfGcs1)(value)) {
        return (0, Gcs1_1.Gcs1ToJSON)(value);
    }
    if ((0, Github1_1.instanceOfGithub1)(value)) {
        return (0, Github1_1.Github1ToJSON)(value);
    }
    if ((0, GoogleDrive1_1.instanceOfGoogleDrive1)(value)) {
        return (0, GoogleDrive1_1.GoogleDrive1ToJSON)(value);
    }
    if ((0, OneDrive1_1.instanceOfOneDrive1)(value)) {
        return (0, OneDrive1_1.OneDrive1ToJSON)(value);
    }
    if ((0, Sharepoint1_1.instanceOfSharepoint1)(value)) {
        return (0, Sharepoint1_1.Sharepoint1ToJSON)(value);
    }
    if ((0, WebCrawler1_1.instanceOfWebCrawler1)(value)) {
        return (0, WebCrawler1_1.WebCrawler1ToJSON)(value);
    }
    if ((0, Zoom1_1.instanceOfZoom1)(value)) {
        return (0, Zoom1_1.Zoom1ToJSON)(value);
    }
    if ((0, ZoomAdmin1_1.instanceOfZoomAdmin1)(value)) {
        return (0, ZoomAdmin1_1.ZoomAdmin1ToJSON)(value);
    }
    return {};
}
