"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * Vectorize API
 * API for Vectorize services (Beta)
 *
 * The version of the OpenAPI document: 0.1.2
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.UpdateAIPlatformConnectorRequestFromJSON = UpdateAIPlatformConnectorRequestFromJSON;
exports.UpdateAIPlatformConnectorRequestFromJSONTyped = UpdateAIPlatformConnectorRequestFromJSONTyped;
exports.UpdateAIPlatformConnectorRequestToJSON = UpdateAIPlatformConnectorRequestToJSON;
exports.UpdateAIPlatformConnectorRequestToJSONTyped = UpdateAIPlatformConnectorRequestToJSONTyped;
var Anthropic1_1 = require("./Anthropic1");
var Bedrock1_1 = require("./Bedrock1");
var Groq1_1 = require("./Groq1");
var Openai1_1 = require("./Openai1");
var Vertex1_1 = require("./Vertex1");
var Voyage1_1 = require("./Voyage1");
function UpdateAIPlatformConnectorRequestFromJSON(json) {
    return UpdateAIPlatformConnectorRequestFromJSONTyped(json, false);
}
function UpdateAIPlatformConnectorRequestFromJSONTyped(json, ignoreDiscriminator) {
    if (json == null) {
        return json;
    }
    if ((0, Anthropic1_1.instanceOfAnthropic1)(json)) {
        return (0, Anthropic1_1.Anthropic1FromJSONTyped)(json, true);
    }
    if ((0, Bedrock1_1.instanceOfBedrock1)(json)) {
        return (0, Bedrock1_1.Bedrock1FromJSONTyped)(json, true);
    }
    if ((0, Groq1_1.instanceOfGroq1)(json)) {
        return (0, Groq1_1.Groq1FromJSONTyped)(json, true);
    }
    if ((0, Openai1_1.instanceOfOpenai1)(json)) {
        return (0, Openai1_1.Openai1FromJSONTyped)(json, true);
    }
    if ((0, Vertex1_1.instanceOfVertex1)(json)) {
        return (0, Vertex1_1.Vertex1FromJSONTyped)(json, true);
    }
    if ((0, Voyage1_1.instanceOfVoyage1)(json)) {
        return (0, Voyage1_1.Voyage1FromJSONTyped)(json, true);
    }
    return {};
}
function UpdateAIPlatformConnectorRequestToJSON(json) {
    return UpdateAIPlatformConnectorRequestToJSONTyped(json, false);
}
function UpdateAIPlatformConnectorRequestToJSONTyped(value, ignoreDiscriminator) {
    if (ignoreDiscriminator === void 0) { ignoreDiscriminator = false; }
    if (value == null) {
        return value;
    }
    if ((0, Anthropic1_1.instanceOfAnthropic1)(value)) {
        return (0, Anthropic1_1.Anthropic1ToJSON)(value);
    }
    if ((0, Bedrock1_1.instanceOfBedrock1)(value)) {
        return (0, Bedrock1_1.Bedrock1ToJSON)(value);
    }
    if ((0, Groq1_1.instanceOfGroq1)(value)) {
        return (0, Groq1_1.Groq1ToJSON)(value);
    }
    if ((0, Openai1_1.instanceOfOpenai1)(value)) {
        return (0, Openai1_1.Openai1ToJSON)(value);
    }
    if ((0, Vertex1_1.instanceOfVertex1)(value)) {
        return (0, Vertex1_1.Vertex1ToJSON)(value);
    }
    if ((0, Voyage1_1.instanceOfVoyage1)(value)) {
        return (0, Voyage1_1.Voyage1ToJSON)(value);
    }
    return {};
}
