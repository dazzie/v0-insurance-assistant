/**
 * Vectorize API
 * API for Vectorize services (Beta)
 *
 * The version of the OpenAPI document: 0.1.2
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
/**
 * Configuration for Web Crawler connector
 * @export
 * @interface WEBCRAWLERConfig
 */
export interface WEBCRAWLERConfig {
    /**
     * Additional Allowed URLs or prefix(es). Add one or more allowed URLs or URL prefixes. The crawler will read URLs that match these patterns in addition to the seed URL(s).. Example: (e.g. https://docs.example.com)
     * @type {Array<string>}
     * @memberof WEBCRAWLERConfig
     */
    allowedDomainsOpt?: Array<string>;
    /**
     * Forbidden Paths. Example: Enter forbidden paths (e.g. /admin)
     * @type {Array<string>}
     * @memberof WEBCRAWLERConfig
     */
    forbiddenPaths?: Array<string>;
    /**
     * Throttle (ms). Example: Enter minimum time between requests in milliseconds
     * @type {number}
     * @memberof WEBCRAWLERConfig
     */
    minTimeBetweenRequests?: number;
    /**
     * Max Error Count. Example: Enter maximum error count
     * @type {number}
     * @memberof WEBCRAWLERConfig
     */
    maxErrorCount?: number;
    /**
     * Max URLs. Example: Enter maximum number of URLs to crawl
     * @type {number}
     * @memberof WEBCRAWLERConfig
     */
    maxUrls?: number;
    /**
     * Max Depth. Example: Enter maximum crawl depth
     * @type {number}
     * @memberof WEBCRAWLERConfig
     */
    maxDepth?: number;
    /**
     * Reindex Interval (seconds). Example: Enter reindex interval in seconds
     * @type {number}
     * @memberof WEBCRAWLERConfig
     */
    reindexIntervalSeconds?: number;
}
/**
 * Check if a given object implements the WEBCRAWLERConfig interface.
 */
export declare function instanceOfWEBCRAWLERConfig(value: object): value is WEBCRAWLERConfig;
export declare function WEBCRAWLERConfigFromJSON(json: any): WEBCRAWLERConfig;
export declare function WEBCRAWLERConfigFromJSONTyped(json: any, ignoreDiscriminator: boolean): WEBCRAWLERConfig;
export declare function WEBCRAWLERConfigToJSON(json: any): WEBCRAWLERConfig;
export declare function WEBCRAWLERConfigToJSONTyped(value?: WEBCRAWLERConfig | null, ignoreDiscriminator?: boolean): any;
