"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * Vectorize API
 * API for Vectorize services (Beta)
 *
 * The version of the OpenAPI document: 0.1.2
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.AIPlatformConnectorInputTypeEnum = void 0;
exports.instanceOfAIPlatformConnectorInput = instanceOfAIPlatformConnectorInput;
exports.AIPlatformConnectorInputFromJSON = AIPlatformConnectorInputFromJSON;
exports.AIPlatformConnectorInputFromJSONTyped = AIPlatformConnectorInputFromJSONTyped;
exports.AIPlatformConnectorInputToJSON = AIPlatformConnectorInputToJSON;
exports.AIPlatformConnectorInputToJSONTyped = AIPlatformConnectorInputToJSONTyped;
/**
 * @export
 */
exports.AIPlatformConnectorInputTypeEnum = {
    Bedrock: 'BEDROCK',
    Vertex: 'VERTEX',
    Openai: 'OPENAI',
    Voyage: 'VOYAGE',
    Anthropic: 'ANTHROPIC',
    Groq: 'GROQ'
};
/**
 * Check if a given object implements the AIPlatformConnectorInput interface.
 */
function instanceOfAIPlatformConnectorInput(value) {
    if (!('id' in value) || value['id'] === undefined)
        return false;
    if (!('type' in value) || value['type'] === undefined)
        return false;
    if (!('config' in value) || value['config'] === undefined)
        return false;
    return true;
}
function AIPlatformConnectorInputFromJSON(json) {
    return AIPlatformConnectorInputFromJSONTyped(json, false);
}
function AIPlatformConnectorInputFromJSONTyped(json, ignoreDiscriminator) {
    if (json == null) {
        return json;
    }
    return {
        'id': json['id'],
        'type': json['type'],
        'config': json['config'],
    };
}
function AIPlatformConnectorInputToJSON(json) {
    return AIPlatformConnectorInputToJSONTyped(json, false);
}
function AIPlatformConnectorInputToJSONTyped(value, ignoreDiscriminator) {
    if (ignoreDiscriminator === void 0) { ignoreDiscriminator = false; }
    if (value == null) {
        return value;
    }
    return {
        'id': value['id'],
        'type': value['type'],
        'config': value['config'],
    };
}
