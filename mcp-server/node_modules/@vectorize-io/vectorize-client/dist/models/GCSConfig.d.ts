/**
 * Vectorize API
 * API for Vectorize services (Beta)
 *
 * The version of the OpenAPI document: 0.1.2
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
/**
 * Configuration for GCP Cloud Storage connector
 * @export
 * @interface GCSConfig
 */
export interface GCSConfig {
    /**
     * File Extensions
     * @type {Array<string>}
     * @memberof GCSConfig
     */
    fileExtensions: GCSConfigFileExtensionsEnum;
    /**
     * Check for updates every (seconds)
     * @type {number}
     * @memberof GCSConfig
     */
    idleTime: number;
    /**
     * Recursively scan all folders in the bucket
     * @type {boolean}
     * @memberof GCSConfig
     */
    recursive?: boolean;
    /**
     * Path Prefix
     * @type {string}
     * @memberof GCSConfig
     */
    pathPrefix?: string;
    /**
     * Path Metadata Regex
     * @type {string}
     * @memberof GCSConfig
     */
    pathMetadataRegex?: string;
    /**
     * Path Regex Group Names. Example: Enter Group Name
     * @type {Array<string>}
     * @memberof GCSConfig
     */
    pathRegexGroupNames?: Array<string>;
}
/**
 * @export
 */
export declare const GCSConfigFileExtensionsEnum: {
    readonly Pdf: "pdf";
    readonly Docdocxgdocodtrtfepub: "doc,docx,gdoc,odt,rtf,epub";
    readonly Pptpptxgslides: "ppt,pptx,gslides";
    readonly Xlsxlsxgsheetsods: "xls,xlsx,gsheets,ods";
    readonly Emlmsg: "eml,msg";
    readonly Txt: "txt";
    readonly Htmlhtm: "html,htm";
    readonly Md: "md";
    readonly Jpgjpegpngwebpsvggif: "jpg,jpeg,png,webp,svg,gif";
    readonly Json: "json";
    readonly Csv: "csv";
};
export type GCSConfigFileExtensionsEnum = typeof GCSConfigFileExtensionsEnum[keyof typeof GCSConfigFileExtensionsEnum];
/**
 * Check if a given object implements the GCSConfig interface.
 */
export declare function instanceOfGCSConfig(value: object): value is GCSConfig;
export declare function GCSConfigFromJSON(json: any): GCSConfig;
export declare function GCSConfigFromJSONTyped(json: any, ignoreDiscriminator: boolean): GCSConfig;
export declare function GCSConfigToJSON(json: any): GCSConfig;
export declare function GCSConfigToJSONTyped(value?: GCSConfig | null, ignoreDiscriminator?: boolean): any;
