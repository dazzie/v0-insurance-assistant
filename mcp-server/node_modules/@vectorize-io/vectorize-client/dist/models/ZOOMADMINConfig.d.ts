/**
 * Vectorize API
 * API for Vectorize services (Beta)
 *
 * The version of the OpenAPI document: 0.1.2
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
/**
 * Configuration for Zoom Admin connector
 * @export
 * @interface ZOOMADMINConfig
 */
export interface ZOOMADMINConfig {
    /**
     * Start Date. Include meetings from this date forward. Example: Enter a date: Example 2023-12-31
     * @type {Date}
     * @memberof ZOOMADMINConfig
     */
    startDate: Date;
    /**
     * End Date. Include meetings up to this date only. Example: Enter a date: Example 2023-12-31
     * @type {Date}
     * @memberof ZOOMADMINConfig
     */
    endDate?: Date;
    /**
     * Recording hosts. Specify user emails to automatically fetch their meeting recordings. When not provided, all users in the account will be processed.. Example: Enter user email addresses
     * @type {Array<string>}
     * @memberof ZOOMADMINConfig
     */
    userEmails?: Array<string>;
    /**
     * Title Filter. Only include meetings containing any of these keywords in the title. Example: Enter meeting title keywords
     * @type {Array<string>}
     * @memberof ZOOMADMINConfig
     */
    titleFilter?: Array<string>;
    /**
     * Maximum Meetings. Leave blank for no limit, or specify a maximum number. Example: Enter maximum number of meetings to retrieve (leave blank for no limit)
     * @type {number}
     * @memberof ZOOMADMINConfig
     */
    maxMeetings?: number;
    /**
     *
     * @type {string}
     * @memberof ZOOMADMINConfig
     */
    participantFilterType: string;
    /**
     * Participant Filter (Admin Only). Only include meetings with these participants (requires admin permissions). Example: Enter participant email or name
     * @type {string}
     * @memberof ZOOMADMINConfig
     */
    participantFilter?: string;
}
/**
 * Check if a given object implements the ZOOMADMINConfig interface.
 */
export declare function instanceOfZOOMADMINConfig(value: object): value is ZOOMADMINConfig;
export declare function ZOOMADMINConfigFromJSON(json: any): ZOOMADMINConfig;
export declare function ZOOMADMINConfigFromJSONTyped(json: any, ignoreDiscriminator: boolean): ZOOMADMINConfig;
export declare function ZOOMADMINConfigToJSON(json: any): ZOOMADMINConfig;
export declare function ZOOMADMINConfigToJSONTyped(value?: ZOOMADMINConfig | null, ignoreDiscriminator?: boolean): any;
