"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * Vectorize API
 * API for Vectorize services (Beta)
 *
 * The version of the OpenAPI document: 0.1.2
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.DestinationConnectorInputTypeEnum = void 0;
exports.instanceOfDestinationConnectorInput = instanceOfDestinationConnectorInput;
exports.DestinationConnectorInputFromJSON = DestinationConnectorInputFromJSON;
exports.DestinationConnectorInputFromJSONTyped = DestinationConnectorInputFromJSONTyped;
exports.DestinationConnectorInputToJSON = DestinationConnectorInputToJSON;
exports.DestinationConnectorInputToJSONTyped = DestinationConnectorInputToJSONTyped;
var DestinationConnectorInputConfig_1 = require("./DestinationConnectorInputConfig");
/**
 * @export
 */
exports.DestinationConnectorInputTypeEnum = {
    Capella: 'CAPELLA',
    Datastax: 'DATASTAX',
    Elastic: 'ELASTIC',
    Pinecone: 'PINECONE',
    Singlestore: 'SINGLESTORE',
    Milvus: 'MILVUS',
    Postgresql: 'POSTGRESQL',
    Qdrant: 'QDRANT',
    Supabase: 'SUPABASE',
    Weaviate: 'WEAVIATE',
    Azureaisearch: 'AZUREAISEARCH',
    Turbopuffer: 'TURBOPUFFER'
};
/**
 * Check if a given object implements the DestinationConnectorInput interface.
 */
function instanceOfDestinationConnectorInput(value) {
    if (!('id' in value) || value['id'] === undefined)
        return false;
    if (!('type' in value) || value['type'] === undefined)
        return false;
    if (!('config' in value) || value['config'] === undefined)
        return false;
    return true;
}
function DestinationConnectorInputFromJSON(json) {
    return DestinationConnectorInputFromJSONTyped(json, false);
}
function DestinationConnectorInputFromJSONTyped(json, ignoreDiscriminator) {
    if (json == null) {
        return json;
    }
    return {
        'id': json['id'],
        'type': json['type'],
        'config': (0, DestinationConnectorInputConfig_1.DestinationConnectorInputConfigFromJSON)(json['config']),
    };
}
function DestinationConnectorInputToJSON(json) {
    return DestinationConnectorInputToJSONTyped(json, false);
}
function DestinationConnectorInputToJSONTyped(value, ignoreDiscriminator) {
    if (ignoreDiscriminator === void 0) { ignoreDiscriminator = false; }
    if (value == null) {
        return value;
    }
    return {
        'id': value['id'],
        'type': value['type'],
        'config': (0, DestinationConnectorInputConfig_1.DestinationConnectorInputConfigToJSON)(value['config']),
    };
}
