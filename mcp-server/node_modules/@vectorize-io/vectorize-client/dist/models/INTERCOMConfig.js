"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * Vectorize API
 * API for Vectorize services (Beta)
 *
 * The version of the OpenAPI document: 0.1.2
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.INTERCOMConfigStateEnum = void 0;
exports.instanceOfINTERCOMConfig = instanceOfINTERCOMConfig;
exports.INTERCOMConfigFromJSON = INTERCOMConfigFromJSON;
exports.INTERCOMConfigFromJSONTyped = INTERCOMConfigFromJSONTyped;
exports.INTERCOMConfigToJSON = INTERCOMConfigToJSON;
exports.INTERCOMConfigToJSONTyped = INTERCOMConfigToJSONTyped;
/**
 * @export
 */
exports.INTERCOMConfigStateEnum = {
    Open: 'open',
    Closed: 'closed',
    Snoozed: 'snoozed'
};
/**
 * Check if a given object implements the INTERCOMConfig interface.
 */
function instanceOfINTERCOMConfig(value) {
    if (!('createdAt' in value) || value['createdAt'] === undefined)
        return false;
    return true;
}
function INTERCOMConfigFromJSON(json) {
    return INTERCOMConfigFromJSONTyped(json, false);
}
function INTERCOMConfigFromJSONTyped(json, ignoreDiscriminator) {
    if (json == null) {
        return json;
    }
    return {
        'createdAt': (new Date(json['created_at'])),
        'updatedAt': json['updated_at'] == null ? undefined : (new Date(json['updated_at'])),
        'state': json['state'] == null ? undefined : json['state'],
    };
}
function INTERCOMConfigToJSON(json) {
    return INTERCOMConfigToJSONTyped(json, false);
}
function INTERCOMConfigToJSONTyped(value, ignoreDiscriminator) {
    if (ignoreDiscriminator === void 0) { ignoreDiscriminator = false; }
    if (value == null) {
        return value;
    }
    return {
        'created_at': ((value['createdAt']).toISOString().substring(0, 10)),
        'updated_at': value['updatedAt'] == null ? undefined : ((value['updatedAt']).toISOString().substring(0, 10)),
        'state': value['state'],
    };
}
