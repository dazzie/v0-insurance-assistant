/**
 * Vectorize API
 * API for Vectorize services (Beta)
 *
 * The version of the OpenAPI document: 0.1.2
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import * as runtime from '../runtime';
import type { AddUserFromSourceConnectorResponse, AddUserToSourceConnectorRequest, CreateSourceConnectorRequest, CreateSourceConnectorResponse, DeleteSourceConnectorResponse, GetSourceConnectors200Response, RemoveUserFromSourceConnectorRequest, RemoveUserFromSourceConnectorResponse, SourceConnector, UpdateSourceConnectorRequest, UpdateSourceConnectorResponse, UpdateUserInSourceConnectorRequest, UpdateUserInSourceConnectorResponse } from '../models/index';
export interface AddUserToSourceConnectorOperationRequest {
    organizationId: string;
    sourceConnectorId: string;
    addUserToSourceConnectorRequest: AddUserToSourceConnectorRequest;
}
export interface CreateSourceConnectorOperationRequest {
    organizationId: string;
    createSourceConnectorRequest: CreateSourceConnectorRequest;
    workspaceId?: string;
}
export interface DeleteSourceConnectorRequest {
    organizationId: string;
    sourceConnectorId: string;
}
export interface DeleteUserFromSourceConnectorRequest {
    organizationId: string;
    sourceConnectorId: string;
    removeUserFromSourceConnectorRequest: RemoveUserFromSourceConnectorRequest;
}
export interface GetSourceConnectorRequest {
    organizationId: string;
    sourceConnectorId: string;
}
export interface GetSourceConnectorsRequest {
    organizationId: string;
    workspaceId?: string;
}
export interface UpdateSourceConnectorOperationRequest {
    organizationId: string;
    sourceConnectorId: string;
    updateSourceConnectorRequest: UpdateSourceConnectorRequest;
}
export interface UpdateUserInSourceConnectorOperationRequest {
    organizationId: string;
    sourceConnectorId: string;
    updateUserInSourceConnectorRequest: UpdateUserInSourceConnectorRequest;
}
/**
 *
 */
export declare class SourceConnectorsApi extends runtime.BaseAPI {
    /**
     * Add a user to a source connector
     * Add a user to a source connector
     */
    addUserToSourceConnectorRaw(requestParameters: AddUserToSourceConnectorOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<AddUserFromSourceConnectorResponse>>;
    /**
     * Add a user to a source connector
     * Add a user to a source connector
     */
    addUserToSourceConnector(requestParameters: AddUserToSourceConnectorOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<AddUserFromSourceConnectorResponse>;
    /**
     * Creates a new source connector for data ingestion. The specific configuration fields required depend on the connector type selected.
     * Create a new source connector
     */
    createSourceConnectorRaw(requestParameters: CreateSourceConnectorOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<CreateSourceConnectorResponse>>;
    /**
     * Creates a new source connector for data ingestion. The specific configuration fields required depend on the connector type selected.
     * Create a new source connector
     */
    createSourceConnector(requestParameters: CreateSourceConnectorOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<CreateSourceConnectorResponse>;
    /**
     * Delete a source connector
     * Delete a source connector
     */
    deleteSourceConnectorRaw(requestParameters: DeleteSourceConnectorRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<DeleteSourceConnectorResponse>>;
    /**
     * Delete a source connector
     * Delete a source connector
     */
    deleteSourceConnector(requestParameters: DeleteSourceConnectorRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<DeleteSourceConnectorResponse>;
    /**
     * Delete a source connector user
     * Delete a source connector user
     */
    deleteUserFromSourceConnectorRaw(requestParameters: DeleteUserFromSourceConnectorRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<RemoveUserFromSourceConnectorResponse>>;
    /**
     * Delete a source connector user
     * Delete a source connector user
     */
    deleteUserFromSourceConnector(requestParameters: DeleteUserFromSourceConnectorRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<RemoveUserFromSourceConnectorResponse>;
    /**
     * Get a source connector
     * Get a source connector
     */
    getSourceConnectorRaw(requestParameters: GetSourceConnectorRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<SourceConnector>>;
    /**
     * Get a source connector
     * Get a source connector
     */
    getSourceConnector(requestParameters: GetSourceConnectorRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<SourceConnector>;
    /**
     * Get all existing source connectors
     * Get all existing source connectors
     */
    getSourceConnectorsRaw(requestParameters: GetSourceConnectorsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<GetSourceConnectors200Response>>;
    /**
     * Get all existing source connectors
     * Get all existing source connectors
     */
    getSourceConnectors(requestParameters: GetSourceConnectorsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<GetSourceConnectors200Response>;
    /**
     * Update a source connector
     * Update a source connector
     */
    updateSourceConnectorRaw(requestParameters: UpdateSourceConnectorOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<UpdateSourceConnectorResponse>>;
    /**
     * Update a source connector
     * Update a source connector
     */
    updateSourceConnector(requestParameters: UpdateSourceConnectorOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<UpdateSourceConnectorResponse>;
    /**
     * Update a source connector user
     * Update a source connector user
     */
    updateUserInSourceConnectorRaw(requestParameters: UpdateUserInSourceConnectorOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<UpdateUserInSourceConnectorResponse>>;
    /**
     * Update a source connector user
     * Update a source connector user
     */
    updateUserInSourceConnector(requestParameters: UpdateUserInSourceConnectorOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<UpdateUserInSourceConnectorResponse>;
}
