"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * Vectorize API
 * API for Vectorize services (Beta)
 *
 * The version of the OpenAPI document: 0.1.2
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.GcsTypeEnum = void 0;
exports.instanceOfGcs = instanceOfGcs;
exports.GcsFromJSON = GcsFromJSON;
exports.GcsFromJSONTyped = GcsFromJSONTyped;
exports.GcsToJSON = GcsToJSON;
exports.GcsToJSONTyped = GcsToJSONTyped;
var GCSAuthConfig_1 = require("./GCSAuthConfig");
/**
 * @export
 */
exports.GcsTypeEnum = {
    Gcs: 'GCS'
};
/**
 * Check if a given object implements the Gcs interface.
 */
function instanceOfGcs(value) {
    if (!('name' in value) || value['name'] === undefined)
        return false;
    if (!('type' in value) || value['type'] === undefined)
        return false;
    if (!('config' in value) || value['config'] === undefined)
        return false;
    return true;
}
function GcsFromJSON(json) {
    return GcsFromJSONTyped(json, false);
}
function GcsFromJSONTyped(json, ignoreDiscriminator) {
    if (json == null) {
        return json;
    }
    return {
        'name': json['name'],
        'type': json['type'],
        'config': (0, GCSAuthConfig_1.GCSAuthConfigFromJSON)(json['config']),
    };
}
function GcsToJSON(json) {
    return GcsToJSONTyped(json, false);
}
function GcsToJSONTyped(value, ignoreDiscriminator) {
    if (ignoreDiscriminator === void 0) { ignoreDiscriminator = false; }
    if (value == null) {
        return value;
    }
    return {
        'name': value['name'],
        'type': value['type'],
        'config': (0, GCSAuthConfig_1.GCSAuthConfigToJSON)(value['config']),
    };
}
