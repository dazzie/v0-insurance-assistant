"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * Vectorize API
 * API for Vectorize services (Beta)
 *
 * The version of the OpenAPI document: 0.1.2
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.instanceOfPipelineConfigurationSchema = instanceOfPipelineConfigurationSchema;
exports.PipelineConfigurationSchemaFromJSON = PipelineConfigurationSchemaFromJSON;
exports.PipelineConfigurationSchemaFromJSONTyped = PipelineConfigurationSchemaFromJSONTyped;
exports.PipelineConfigurationSchemaToJSON = PipelineConfigurationSchemaToJSON;
exports.PipelineConfigurationSchemaToJSONTyped = PipelineConfigurationSchemaToJSONTyped;
var PipelineSourceConnectorSchema_1 = require("./PipelineSourceConnectorSchema");
var ScheduleSchema_1 = require("./ScheduleSchema");
var PipelineAIPlatformConnectorSchema_1 = require("./PipelineAIPlatformConnectorSchema");
var PipelineDestinationConnectorSchema_1 = require("./PipelineDestinationConnectorSchema");
/**
 * Check if a given object implements the PipelineConfigurationSchema interface.
 */
function instanceOfPipelineConfigurationSchema(value) {
    if (!('sourceConnectors' in value) || value['sourceConnectors'] === undefined)
        return false;
    if (!('destinationConnector' in value) || value['destinationConnector'] === undefined)
        return false;
    if (!('aiPlatformConnector' in value) || value['aiPlatformConnector'] === undefined)
        return false;
    if (!('pipelineName' in value) || value['pipelineName'] === undefined)
        return false;
    if (!('schedule' in value) || value['schedule'] === undefined)
        return false;
    return true;
}
function PipelineConfigurationSchemaFromJSON(json) {
    return PipelineConfigurationSchemaFromJSONTyped(json, false);
}
function PipelineConfigurationSchemaFromJSONTyped(json, ignoreDiscriminator) {
    if (json == null) {
        return json;
    }
    return {
        'sourceConnectors': (json['sourceConnectors'].map(PipelineSourceConnectorSchema_1.PipelineSourceConnectorSchemaFromJSON)),
        'destinationConnector': (0, PipelineDestinationConnectorSchema_1.PipelineDestinationConnectorSchemaFromJSON)(json['destinationConnector']),
        'aiPlatformConnector': (0, PipelineAIPlatformConnectorSchema_1.PipelineAIPlatformConnectorSchemaFromJSON)(json['aiPlatformConnector']),
        'pipelineName': json['pipelineName'],
        'schedule': (0, ScheduleSchema_1.ScheduleSchemaFromJSON)(json['schedule']),
    };
}
function PipelineConfigurationSchemaToJSON(json) {
    return PipelineConfigurationSchemaToJSONTyped(json, false);
}
function PipelineConfigurationSchemaToJSONTyped(value, ignoreDiscriminator) {
    if (ignoreDiscriminator === void 0) { ignoreDiscriminator = false; }
    if (value == null) {
        return value;
    }
    return {
        'sourceConnectors': (value['sourceConnectors'].map(PipelineSourceConnectorSchema_1.PipelineSourceConnectorSchemaToJSON)),
        'destinationConnector': (0, PipelineDestinationConnectorSchema_1.PipelineDestinationConnectorSchemaToJSON)(value['destinationConnector']),
        'aiPlatformConnector': (0, PipelineAIPlatformConnectorSchema_1.PipelineAIPlatformConnectorSchemaToJSON)(value['aiPlatformConnector']),
        'pipelineName': value['pipelineName'],
        'schedule': (0, ScheduleSchema_1.ScheduleSchemaToJSON)(value['schedule']),
    };
}
