"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * Vectorize API
 * API for Vectorize services (Beta)
 *
 * The version of the OpenAPI document: 0.1.2
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.instanceOfPipelineSourceConnectorSchema = instanceOfPipelineSourceConnectorSchema;
exports.PipelineSourceConnectorSchemaFromJSON = PipelineSourceConnectorSchemaFromJSON;
exports.PipelineSourceConnectorSchemaFromJSONTyped = PipelineSourceConnectorSchemaFromJSONTyped;
exports.PipelineSourceConnectorSchemaToJSON = PipelineSourceConnectorSchemaToJSON;
exports.PipelineSourceConnectorSchemaToJSONTyped = PipelineSourceConnectorSchemaToJSONTyped;
var SourceConnectorType_1 = require("./SourceConnectorType");
/**
 * Check if a given object implements the PipelineSourceConnectorSchema interface.
 */
function instanceOfPipelineSourceConnectorSchema(value) {
    if (!('id' in value) || value['id'] === undefined)
        return false;
    if (!('type' in value) || value['type'] === undefined)
        return false;
    if (!('config' in value) || value['config'] === undefined)
        return false;
    return true;
}
function PipelineSourceConnectorSchemaFromJSON(json) {
    return PipelineSourceConnectorSchemaFromJSONTyped(json, false);
}
function PipelineSourceConnectorSchemaFromJSONTyped(json, ignoreDiscriminator) {
    if (json == null) {
        return json;
    }
    return {
        'id': json['id'],
        'type': (0, SourceConnectorType_1.SourceConnectorTypeFromJSON)(json['type']),
        'config': json['config'],
    };
}
function PipelineSourceConnectorSchemaToJSON(json) {
    return PipelineSourceConnectorSchemaToJSONTyped(json, false);
}
function PipelineSourceConnectorSchemaToJSONTyped(value, ignoreDiscriminator) {
    if (ignoreDiscriminator === void 0) { ignoreDiscriminator = false; }
    if (value == null) {
        return value;
    }
    return {
        'id': value['id'],
        'type': (0, SourceConnectorType_1.SourceConnectorTypeToJSON)(value['type']),
        'config': value['config'],
    };
}
